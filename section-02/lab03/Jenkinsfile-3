pipeline {
  agent {
    kubernetes {
      yamlFile 'deployment/pod-template.yaml'
    }
  }

  stages {
    stage ('Clone') {
      steps {
        container('maven')  {
          git url: 'https://github.com/yoonjk/jenkins-handson.git', branch: 'dev'
        }
      }
    }

    stage("read properties") {
      steps {
        script {
          def props = readProperties  file:'deployment/pipeline.properties'
                
		      // Base Directory
          env['baseDir'] = props['baseDir']
          env['baseDeployDir'] = props['baseDeployDir']

		      // Docker Hub Info.
          env['tag'] = props['version']
          env['dockerRegistry'] = props['dockerRegistry']
          env['credentialRegistry']=props['credentialRegistry']
          env['image'] = props['image']
              
		      // Kubernetes
          env['deployment'] = props['deployment']
          env['config'] = props['config']
          env['service'] = props['service']
          env['ingress'] = props['ingress']
          env['selector_key'] = props['selector_key']
          env['selector_val'] = props['selector_val']
          env['namespace'] = props['namespace'] 
        }
      }
    }

    stage ('build') {
      steps {
        container('maven')  {
          sh 'mvn clean package -DskipTests'
        }
      }
    }
    stage ('build and push image') {
      steps { 
        container('kaniko') {
          sh '''
              cat /kaniko/.docker/config.json
              /kaniko/executor --dockerfile deployment/Dockerfile --context `pwd` --destination ${image}:hello
          '''
        }
      }
    }

		stage( "Clean Up Existing Deployments" ) {
      steps {
        container('kubectl') {
          sh "kubectl delete deployments -n ${namespace} --selector=${selector_key}=${selector_val}"
        }
      }
		}

		// Deploy App to Cluster in Kubernetes
		stage( "Deploy to Cluster" ) {
      steps {
        container('kubectl') {
          sh "kubectl apply -n ${namespace} -f ${deployment}"
          sh "sleep 5"
          sh "kubectl apply -n ${namespace} -f ${service}"
        }
      }
		}        
  }
}